#####################################
## General Environmental Variables ##
#####################################
if type emacsclient > /dev/null 2>&1; then
  export EDITOR="emacsclient -t"
  export ALTERNATE_EDITOR=vim
else
  export EDITOR=vim
  export ALTERNATE_EDITOR=vi
fi

if type less > /dev/null 2>&1; then
  export PAGER=less
else
  export PAGER=more
fi

# Allows Mac Homebrew to call the Github API with a higher rate limit
export HOMEBREW_GITHUB_API_TOKEN="2296b65523e17d044e836839148344118a7f1095"

export LESSOPEN=""
export BLOCKSIZE=K

unset MAILCHECK

umask 22

#############
## Aliases ##
#############
alias emacs='emacs -nw'
alias back='cd $OLDPWD'
alias ccv='ssh dglidden@ssh.ccv.brown.edu'
alias lab='ssh dglidden@128.148.159.174'
alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'
alias mkpatch="diff -urNa $1 $2"
alias less='less -i -x4 -R -j5'
alias le='echo $?'
alias la='ls -A'
alias ll='ls -l'
alias r='/usr/bin/R --no-save'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias matrixy='tr -c "[:digit:]" " " < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR="1;32" grep --color "[^ ]"'
alias sfind='grep -rFlio'
alias rfind='grep -rlio'

###############
## Functions ##
###############
function e() {
  eval $EDITOR "$@" 2>/dev/null || $ALTERNATE_EDITOR "$@"
}

function up() {
  oldpwd=$PWD
  if [ -z $1 ]; then
    cd ..
  elif [ $1 -gt 0 ]; then
    let count=0
    while [ $count -lt $1 ]; do
      cd ..
      let count=count+1
    done
  else
    echo "Argument must be a positive integer."
  fi
  OLDPWD=$oldpwd
}

function joinpdf() {
  gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=merged.pdf "$@"
}

# I want ls to show me dotfiles when I'm not in my ~
function ls() {
  if [[ $PWD == $HOME ]]; then
    if [[ $OSTYPE == darwin* ]]; then
      /bin/ls -G "$@"
    elif [[ $OSTYPE == freebsd* ]]; then
      /bin/ls -CG "$@"
    elif [[ $OSTYPE == linux* ]]; then
      /bin/ls -v --color=always "$@"
    else
      /bin/ls
    fi
  else
    if [[ $OSTYPE == darwin* ]]; then
      /bin/ls -GA "$@"
    elif [[ $OSTYPE == freebsd* ]]; then
      /bin/ls -CGa "$@"
    elif [[ $OSTYPE == linux* ]]; then
      /bin/ls -Av --color=always "$@"
    else
      /bin/ls
    fi
  fi
}

function webperm() {
  ifs=$IFS
  IFS=$'\n'
  for file in `find . -type f -print` ; do
    if [ -x "$file" ]; then
      chmod 755 "$file"
    else
      chmod 644 "$file"
    fi
  done
  find . -type d -exec chmod 755 {} \;
  IFS=$ifs
}

function safeperm() {
  ifs=$IFS
  IFS=$'\n'
  for file in `find . -type f -print` ; do
    if [ -x "$file" ]; then
      chmod 700 "$file"
    else
      chmod 600 "$file"
    fi
  done
  find . -type d -exec chmod 700 {} \;
  IFS=$ifs
}

function groupperm() {
  ifs=$IFS
  IFS=$'\n'
  for file in `find . -type f -print` ; do
    if [ -x "$file" ]; then
      chmod 775 "$file"
    else
      chmod 664 "$file"
    fi
  done
  find . -type d -exec chmod 775 {} \;
  IFS=$ifs
}

function reallykill() {
  PID=$1
  RETVAL=0

  for signal in "TERM" "INT" "HUP" "KILL"; do
    kill -$signal $PID
    RETVAL=$?
    [ $RETVAL -eq 0 ] && break
    echo "warning: kill failed: pid=$PID, signal=$signal" >&2
    sleep 1
  done

  return $RETVAL
}
